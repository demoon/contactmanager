{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/FormGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/pages/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showDetails","showDetailsCard","deleteContact","delete","then","_this2","_this$props$contact","name","city","phone","className","onClick","Link","to","style","cursor","float","color","marginLeft","bind","Contacts","Fragment","contacts_Contact","FormGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onFormChange","e","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","history","push","_this$state2","layout_FormGroup","EditContact","updatedContact","match","params","put","_this3","Header","branding","href","About","NotFound","Test","title","body","fetch","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0381071.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'CREATE_CONTACT':\n            return{\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return{\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n            };\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component{\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data});\n    }\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>{this.props.children}</Context.Provider>\n        )\n    }\n}\n\n\nexport const Consumer = Context.Consumer;\n","import React, {Component} from 'react';\nimport {Consumer} from '../../context';\nimport {Link} from \"react-router-dom\";\nimport axios from 'axios';\n\nclass Contact extends Component {\n    state = {\n        showDetails: false\n    };\n\n    showDetailsCard = () => {\n        this.setState({showDetails: !this.state.showDetails});\n    };\n\n    deleteContact = (id, dispatch) => {\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n            .then(res => dispatch({type:'DELETE_CONTACT',payload: id}));\n\n    };\n\n    render() {\n        const {name, city, phone, id} = this.props.contact;\n        return (\n            <Consumer>\n                {value => {\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>{name}\n                                <i onClick={this.showDetailsCard} className=\"fas fa-sort-down\"></i>\n                                <Link to={`/contact/edit/${id}`}><i className=\"fas fa-pencil-alt fa-sm\" style={{cursor: 'pointer', float: 'right', color: 'black', marginLeft: '1rem'}}></i></Link>\n                                <i onClick={this.deleteContact.bind(this,id,value.dispatch)} className=\"fas fa-times\" style={{color: 'red', float: 'right'}}></i></h4>\n                            {this.state.showDetails ?\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">City: {city}</li>\n                                    <li className=\"list-group-item\">Tel: {phone}</li>\n                                </ul>\n                                : null}\n\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n\n        );\n    }\n}\n\nexport default Contact;","import React, {Component} from 'react';\nimport Contact from './Contact';\nimport {Consumer} from '../../context'\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"h1 display-4 mb-2\"><span className=\"font-color: #bae7ff\">Contact</span> list</h1>\n                            {contacts.map(contact => <Contact key={contact.id} contact={contact}/>)}\n                        </React.Fragment>)\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default Contacts","import React from 'react';\nimport classnames from 'classnames';\n\nconst FormGroup = ({name, label, type, placeholder, value, onChange, error}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type}\n                   name={name}\n                   className={classnames(\"form-control\",{\"is-invalid\": error})}\n                   placeholder={placeholder}\n                   value={value}\n                   onChange={onChange}/>\n            <div className=\"invalid-feedback\">{error}</div>\n        </div>\n    )\n};\n\nFormGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default FormGroup;\n","import React, {Component} from 'react';\nimport {Consumer} from '../../context';\nimport FormGroup from '../layout/FormGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        city: '',\n        phone: '',\n        errors: {}\n    };\n\n    onFormChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n    onSubmit = (dispatch, e) => {\n        e.preventDefault();\n        const {name, city, phone} = this.state;\n\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n        }\n        if (city === '') {\n            this.setState({errors: {city: 'City is required'}})\n        }\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n        }\n\n        const newContact = {\n            name, city, phone\n        };\n        axios.post('https://jsonplaceholder.typicode.com/users', newContact).then(res =>\n            dispatch({\n                payload: res.data,\n                type: 'CREATE_CONTACT'\n            }));\n\n\n        ;\n\n        this.props.history.push('/');\n    };\n\n    render() {\n        const {name, city, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {\n                    value =>\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                                    <FormGroup label=\"Name\" name=\"name\" value={name} onChange={this.onFormChange} placeholder=\"Name\" error={errors.name}/>\n                                    <FormGroup label=\"City\" name=\"city\" value={city} onChange={this.onFormChange} placeholder=\"City\" error={errors.city}/>\n                                    <FormGroup label=\"Phone\" name=\"phone\" value={phone} onChange={this.onFormChange} placeholder=\"Phone\" error={errors.phone}/>\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block mt-5\">Submit</button>\n                                </form>\n                            </div>\n                        </div>\n                }\n            </Consumer>\n        )\n    }\n\n\n}\n\nexport default AddContact;","import React, {Component} from 'react';\nimport {Consumer} from '../../context';\nimport FormGroup from '../layout/FormGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        city: '',\n        phone: '',\n        errors: {}\n    };\n\n    async componentDidMount(){\n        const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(\n        res =>\n        this.setState({\n            name: res.data.name,\n            phone: res.data.phone\n        })\n        );\n\n    }\n\n    onFormChange = (e) => this.setState({[e.target.name]: e.target.value});\n\n     onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const {name, city, phone} = this.state;\n\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required'}})\n        }\n        if (city === '') {\n            this.setState({errors: {city: 'City is required'}})\n        }\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}})\n        }\n\n        const updatedContact = {\n            name,\n            city,\n            phone\n        };\n        const {id} = this.props.match.params;\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updatedContact);\n\n\n        dispatch({\n          type: 'UPDATE_CONTACT',\n          payload: res.data\n        });\n\n        this.props.history.push('/');\n    };\n\n    render() {\n        const {name, city, phone, errors} = this.state;\n\n        return (\n            <Consumer>\n                {\n                    value =>\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                                    <FormGroup label=\"Name\" name=\"name\" value={name} onChange={this.onFormChange} placeholder=\"Name\" error={errors.name}/>\n                                    <FormGroup label=\"City\" name=\"city\" value={city} onChange={this.onFormChange} placeholder=\"City\" error={errors.city}/>\n                                    <FormGroup label=\"Phone\" name=\"phone\" value={phone} onChange={this.onFormChange} placeholder=\"Phone\" error={errors.phone}/>\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block mt-5\">Edit contact</button>\n                                </form>\n                            </div>\n                        </div>\n                }\n            </Consumer>\n        )\n    }\n\n\n}\n\nexport default EditContact;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nconst Header = (props) => {\n    const {branding} = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item mr-2\">\n                            <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>Home</Link>\n                        </li>\n                        <li className=\"nav-item mr-2\"><Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add </Link></li>\n                        <li className=\"nav-item mr-2\"><Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>About</Link></li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst About = (props) => {\n\n    return(\n        <div>\n            <h1 className=\"display-4\">About Contact Manager {props.match.params.id}</h1>\n            <p className=\"lead\">Simple app to manage contacts</p>\n            <p className=\"text-secondary\">version 1.0.0</p>\n        </div>\n    )\n};\n\nexport default About;","import React from 'react';\n\nconst NotFound = () =>{\n    return(\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>page not found</h1>\n            <p className=\"lead\">Sorry, that page does not exist</p>\n        </div>\n    )\n}\n\nexport default NotFound;","import React, {Component} from 'react';\n\nclass Test extends Component{\n\n    state ={\n        title: '',\n        body: ''\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\n            .then(response => response.json())\n            .then(post => this.setState({title: post.title, body: post.body}));\n    }\n\n    render(){\n        const {title, body} = this.state;\n        return(\n            <div>\n                <h1>{title}</h1>\n                <p>{body}</p>\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport {Provider} from \"./context\";\nimport NotFound from './components/pages/NotFound'\nimport Test from './components/pages/Test'\n\nclass App extends Component {\n\n\n    render() {\n        return (\n            <Provider>\n                <Router>\n                <div className=\"App\">\n                    <Header branding=\"somebrand\"/>\n                    <div className=\"container\">\n                        <Switch>\n                            <Route exact path=\"/\" component={Contacts} />\n                            <Route exact path=\"/contact/add\" component={AddContact} />\n                            <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                            <Route exact path=\"/test\" component={Test} />\n                            <Route exact path=\"/about\" component={About} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}